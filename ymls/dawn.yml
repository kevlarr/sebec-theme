name: Twilight Lake Dawn
style: light

terminal:




vscode:
  tokens:
    # Dawn is useful for tokens that should blend into the background
    - dawn0:
      - name: Low-contrast punctuation
        textmate:
          - punctuation.parenthesis            # Eg. parentheses when wrapping lines in Python
          - punctuation.definition.arguments   # eg. parentheses around args in function call
          - punctuation.separator              # eg. `,`, `.` in method calls, or `:` in dicts
          - punctuation.section.class.begin    # eg. `:` after class def
          - punctuation.section.function.begin # eg. `:` after function def

      - name: Keyword argument '=' sign
        textmate:
          - meta.function-call.arguments keyword.operator.assignment

    - dawn0 italic:
      - textmate:
        - comment
        - punctuation.definition.comment

    # Sapphire
    - sapphire0:
      - name: Serialized property names
        textmate:
          - support.type.property-name.json
          - entity.name.tag.yaml

    - sapphire1:
      - semantic: class.typeHint
      - semantic: enum.typeHint

    - sapphire1 underline:
      - semantic: module

    - sapphire1 bold:
      - semantic: class.declaration
      - semantic: function.declaration
      - semantic: method.declaration

    - sapphire1:
      - semantic: class
      - semantic: enum
      - semantic: function
      - textmate: meta.function-call.generic.python
      - semantic: method
      - semantic: function.decorator
      - textmate: support.function.string.sql

    - sapphire3:
      - textmate: punctuation.definition.decorator # `@` for decorators

    # Cerulean
    - cerulean2:
      - name: Operator symbols
        textmate:
        - keyword.operator.arithmetic
        - keyword.operator.assignment

      - name: SQL keywords
        textmate:
        - keyword.other.DML.sql   # eg. SELECT, FROM, etc
        - keyword.other.DDL       # eg. IS, NOT, NULL, etc
        - keyword.other.alias.sql # eg. AS
        - keyword.other.sql       # eg. CASE, WHEN, etc

    - cerulean2 bold:
      - name: class & def keywords
        textmate:
        - storage.type.class
        - storage.type.function
        - storage.modifier

      - name: Control flow & logical keywords
        textmate:
        - keyword.control.flow # eg. `if`, `while`
        - keyword.control.import
        - keyword.operator.logical # eg. `in`, `not`

    - cerulean2:
      - name: Keyword arguments
        textmate: variable.parameter.function-call

    # Evergreen
    - evergreen0:
      - textmate: support.variable.magic

    - evergreen0 italic:
      - textmate: string

    - evergreen1:
      - textmate: constant.character.format.placeholder
      - textmate: constant.numeric
      - textmate: constant.language

    - evergreen2 italic:
      - textmate: storage.type.string # eg. the `f` in `f"string"`
      - textmate: punctuation.definition.string, # quotes around the string

    # Solar
    - solarPurple1 bold:
      - semantic: selfParameter
      - semantic: clsParameter

    - solarPurple0:
      - textmate: constant.other.table-name.sql # table columns
      - semantic: property
      - semantic: property.declaration
      - semantic: enumMember
