name: Twilight Lake Dusk
style: dark

terminal:
  background: dusk3
  foreground: dawn0
  selectionBackground: sapphire0
  selectionForeground: dawn4
  matchBackground: solarPurple0 alpha=0.25
  cursorColor: cerulean3
  cursorTextColor: dusk0

  ansi:
    black: dusk0
    blackBright: dusk3
    blue: sapphire1
    blueBright: sapphire2
    cyan: cerulean1
    cyanBright: cerulean2
    green: evergreen1
    greenBright: evergreen2
    red: solarRed0
    redBright: solarRed1
    magenta: solarPurple0
    magentaBright: solarPurple1
    white: dawn0
    whiteBright: dawn2
    yellow: solarYellow0
    yellowBright: solarYellow1

  iterm:
    badgeColor: cerulean0
    boldColor: dawn5
    cursorGuideColor: dusk4
    linkColor: cerulean1
    tabColor: dusk2
    underlineColor: cerulean0

vscode:
  # Semantic & textmate token color assignments.
  #
  # See:
  # - https://macromates.com/manual/en/language_grammars#naming_conventions
  tokens:

    # Dusk is useful for tokens that should blend into the background
    - dusk6 italic:
      - textmate: comment
      - textmate: punctuation.definition.comment

    - dusk7:
      - name: Low-contrast punctuation
        textmate:
          - punctuation.parenthesis            # Eg. parentheses when wrapping lines in Python
          - punctuation.definition.arguments   # eg. parentheses around args in function call
          - punctuation.separator              # eg. `,`, `.` in method calls, or `:` in dicts
          - punctuation.section.class.begin    # eg. `:` after class def
          - punctuation.section.function.begin # eg. `:` after function def

      - name: Keyword argument '=' sign
        textmate:
          - meta.function-call.arguments keyword.operator.assignment

    # Evergreen is useful for tokens that should have a lower contrast ratio
    # like Dusk and still present as very separate from the background and
    # other shades of blue but without drawing attention like accent colors
    - evergreen0 italic:
      - name: String embellishments (quotes, placeholders, etc)
        textmate:
        - constant.character.format.placeholder
        - storage.type.string # eg. the `f` in `f"string"`
        - punctuation.definition.string, # quotes around the string

    - evergreen1 italic:
      - textmate: string

    - evergreen2:
      - name: Literal values
        textmate:
        - constant.language
        - constant.numeric

    # Sapphire is useful for tokens that should be legible against the
    # background but still blend in fairly well and coordinate with many
    # of the surrounding tokens
    - sapphire1:
      - name: Keyword arguments
        textmate: variable.parameter.function-call

      - name: SQL keywords
        textmate:
        - keyword.other.DML.sql   # eg. SELECT, FROM, etc
        - keyword.other.DDL       # eg. IS, NOT, NULL, etc
        - keyword.other.alias.sql # eg. AS
        - keyword.other.sql       # eg. CASE, WHEN, etc

    - sapphire1 bold:
      - name: class & def keywords
        textmate:
        - storage.type.class
        - storage.type.function
        - storage.modifier

      - name: Control flow & logical keywords
        textmate:
        - keyword.control.flow # eg. `if`, `while`
        - keyword.control.import
        - keyword.operator.logical # eg. `in`, `not`

    - sapphire1:
      - name: Operator symbols
        textmate:
        - keyword.operator.arithmetic
        - keyword.operator.assignment

    - sapphire2:
      - name: Serialized property names
        textmate:
          - support.type.property-name.json
          - entity.name.tag.yaml

    # Cerulean is useful for tokens that should stand out from keywords and
    # plain text while also not being too different or distracting
    - cerulean0:
      - textmate: punctuation.definition.decorator # `@` for decorators

    - cerulean1:
      - semantic: class.typeHint
      - semantic: enum.typeHint

    - cerulean1 underline:
      - semantic: module

    - cerulean2 bold:
      - semantic: class.declaration
      - semantic: function.declaration
      - semantic: method.declaration

    - cerulean2:
      - semantic: class
      - semantic: enum
      - semantic: function
      - textmate: meta.function-call.generic.python
      - semantic: method
      - semantic: function.decorator
      - textmate: support.function.string.sql

    # Solar is useful for accents and defining different classes of tokens,
    # but they should be used judiciously to avoid candy colors
    - solarRed2:
      - textmate: support.variable.magic
      - textmate: constant.other.caps

    - solarPurple1:
      - textmate: constant.other.table-name.sql # table columns
      - semantic: property
      - semantic: property.declaration
      - semantic: enumMember

    - solarPurple1 bold:
      - semantic: selfParameter
      - semantic: clsParameter

  ui_new:

    descriptionForeground: dawn0 # Eg. extension descriptions in search
    disabledForeground: dusk6
    errorForeground: solarRed1
    focusBorder: cerulean2
    foreground: dawn0

    activityBar:
      activeBorder: cerulean1
      background: dusk4
      foreground: cerulean1 # Activity bar icon color
      inactiveForeground: dusk7

    activityBarBadge:
      background: cerulean2
      foreground: dusk0

    activityErrorBadge:
      background: solarRed2
      foreground: dusk0

    activityWarningBadge:
      background: solarOrange2
      foreground: dusk0

    badge:
      background: cerulean2 # Eg. the "Changes" count badge in Source Control sidebar
      foreground: dusk0 # Eg. the - Changes" count badge in Source Control sidebar

    breadcrumb:
      background: dusk0

    button:
      foreground: dawn5
      hoverBackground: sapphire1
      background: sapphire0

    checkbox:
      background: dusk0
      border: dusk5
      foreground: dawn5

    dropdown:
      background: dusk0
      border: dusk5
      foreground: dawn5
      listBackground: dusk3
      listBackground: dusk3

    editor:
      background: dusk0
      foreground: dawn0

    editorError:
      foreground: solarRed1

    editorGroup:
      border: dusk2
      dropBackground: cerulean1 alpha=0.25

    editorGroupHeader:
      tabsBackground: dusk2

    editorGutter:
      addedBackground: evergreen0
      deletedBackground: solarRed2
      foldingControlForeground: sapphire2 # The > carets for folding
      modifiedBackground: solarYellow1

    editorLineNumber:
      activeForeground: dusk7
      foreground: dusk5

    editorMinimap:
      inlineChatInserted: solarYellow1

    editorWarning:
      foreground: solarRed1

    editorWidget:
      background: dusk5
      foreground: dawn5

    icon:
      foreground: dawn0

    input:
      background: dusk0
      border: dusk5
      foreground: dawn5
      placeholderForeground: dusk6

    inputOption:
      activeBorder: dusk0 # match input color to hide the border
      hoverBackground: dusk6
      activeBackground: sapphire2 # eg. the regex button in Find widget when activated

    inputValidation:
      errorBackground: solarRed0
      errorBorder: solarRed0
      errorForeground: dawn5
      infoForeground: dawn5
      warningBackground: solarOrange0
      warningBorder: solarOrange0
      warningForeground: dawn5

    list:
      activeSelectionBackground: sapphire0
      activeSelectionForeground: dawn5
      activeSelectionIconForeground: dawn5
      dropBackground: cerulean1 alpha=0.25
      errorForeground: solarRed0
      filterMatchBackground: sapphire0
      hoverBackground: dusk4 # includes entire section, eg. title & description above a dropdown
      inactiveSelectionBackground: sapphire0
      inactiveSelectionForeground: dawn5
      inactiveSelectionIconForeground: dawn5
      warningForeground: solarOrange0

    listFilterWidget:
      background: dusk6 # brighter than editor widget because editor is darker than sidebar

    minimap:
      background: dusk2 alpha=0.25
      foregroundOpacity: "#ffffff alpha=0.5" # Color doesn't matter, only alpha
      errorHighlight: solarRed0 alpha=0.75
      findMatchHighlight: sapphire1 alpha=0.75
      selectionHighlight: sapphire0 alpha=0.75
      warningHighlight: solarOrange1 alpha=0.75

    minimapGutter:
      addedBackground: evergreen0
      deletedBackground: solarRed2
      modifiedBackground: solarYellow1 alpha=0.75

    panel:
      background: dusk3 # should match terminal.background
      border: dusk3

    progressBar:
      background: cerulean2

    sash:
      hoverBorder: cerulean2 # The drag border indicator on hover

    scrollbar:
      shadow: cerulean1 alpha=0.25 # indicator lines in the terminal that viewport can scroll horizontally/vertically

    scrollbarSlider:
      background: dusk6 # must be brighter than any scrollable widget
      activeBackground: cerulean1
      hoverBackground: cerulean0

    selection:
      background: sapphire1

    sideBar:
      background: dusk2
      dropBackground: cerulean1 alpha=0.25
      foreground: dawn0

    sideBarSectionHeader:
      background: dusk2
      border: dusk5
      foreground: dawn0

    sideBarTitle:
      background: dusk2
      foreground: dawn0

    tab:
      activeBackground: dusk0
      activeForeground: cerulean3 # Overridden by green, red, etc. if changed or errors
      dragAndDropBorder: cerulean2
      hoverBackground: dusk3
      inactiveBackground: dusk2
      inactiveForeground: dusk6
      selectedBorderTop: cerulean1

    textLink:
      foreground: cerulean1

    toolbar:
      activeBackground: sapphire2 # Eg. the "..." icons when opened or other buttons when clicked
      hoverBackground: dusk6 # eg. hovering over icons in panels/widgets

    tree:
      inactiveIndentGuidesStroke: cerulean0
      indentGuidesStroke: cerulean0

    ### TODO
    #
    #- editorActionList.background
    #- editorActionList.foreground
    #- editorActionList.focusForeground
    #- editorActionList.focusBackground
    #- sideBySideEditor.horizontalBorder
    #- sideBySideEditor.verticalBorder
    #- tab.border
    #- editorGroup.border #border between editor groups
    #- editorGroupHeader.border
    #- editorGroupHeader.tabsBorder
    #- sideBar.border
    #- checkbox.selectBackground
    #- checkbox.selectBorder
    #- radio.activeForeground
    #- radio.activeBackground
    #- radio.activeBorder
    #- radio.inactiveForeground
    #- radio.inactiveBackground
    #- radio.inactiveBorder
    #- radio.inactiveHoverBackground
    #- textBlockQuote.background
    #- textBlockQuote.border
    #- tab.activeBorder #Bottom border of active tab
    #- textLink.activeForeground #Foreground on link hover/click (eg. in Welcome page)
    #- inputValidation.errorBackground
    #- inputValidation.infoBackground
    #- minimap.infoHighlight
